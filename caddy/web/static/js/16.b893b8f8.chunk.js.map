{"version":3,"sources":["components/pages/login/form.module.scss","components/pages/login/index.module.scss","components/pages/login/form.tsx","components/pages/login/index.tsx"],"names":["module","exports","form","button","inputIcon","wrapper","row","column","card","css","require","FormItem","Form","Item","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","__onSubmit","bind","assertThisInitialized","react_default","a","createElement","input","prefix","icon","type","className","placeholder","fieldsError","_this$props$form","getFieldDecorator","getFieldError","getFieldsError","isFieldTouched","userNameError","passwordError","es_form","onSubmit","validateStatus","help","rules","required","message","__renderUsernameInput","__renderPasswordInput","es_button","htmlType","disabled","keys","some","field","e","_this2","preventDefault","validateFields","err","values","React","Component","create","LoginPage","align","justify","col","span","spin","spinning","login_form","username","Page"],"mappings":"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","file":"static/js/16.b893b8f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__uw4bV\",\"button\":\"form_button__1-Y6V\",\"inputIcon\":\"form_inputIcon__2bkvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__2_rdt\",\"row\":\"login_row__3A6vq\",\"column\":\"login_column__1ect2\",\"card\":\"login_card__3njUe\"};","import { Button, Form, Icon, Input } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport React from 'react';\nimport { Credentials } from '../../../models/auth/credentials';\nconst css = require('./form.module.scss');\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError: any): boolean {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\ninterface InnerProps extends Props, FormComponentProps {}\n\nexport interface Props {\n    username: string;\n    onSubmit: (cred: Credentials) => void;\n}\n\nclass LoginForm extends React.Component<InnerProps> {\n    constructor(props: InnerProps) {\n        super(props);\n\n        this.__onSubmit = this.__onSubmit.bind(this);\n    }\n\n    public __renderUsernameInput(): any {\n        return (\n            <Input\n                prefix={<Icon type=\"user\" className={css.inputIcon} />}\n                placeholder=\"Username\"\n            />\n        );\n    }\n\n    public __renderPasswordInput(): any {\n        return (\n            <Input\n                prefix={<Icon type=\"lock\" className={css.inputIcon} />}\n                type=\"password\"\n                placeholder=\"Password\"\n            />\n        );\n    }\n\n    public render(): any {\n        const {\n            getFieldDecorator,\n            getFieldError,\n            getFieldsError,\n            isFieldTouched,\n        } = this.props.form;\n\n        // Only show error after a field is touched.\n        const userNameError =\n            isFieldTouched('username') && getFieldError('username');\n        const passwordError =\n            isFieldTouched('password') && getFieldError('password');\n\n        return (\n            <Form className={css.form} onSubmit={this.__onSubmit}>\n                <FormItem\n                    validateStatus={userNameError ? 'error' : 'success'}\n                    help={userNameError || ''}\n                >\n                    {getFieldDecorator('username', {\n                        rules: [\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ],\n                    })(this.__renderUsernameInput())}\n                </FormItem>\n\n                <FormItem\n                    validateStatus={passwordError ? 'error' : 'success'}\n                    help={passwordError || ''}\n                >\n                    {getFieldDecorator('password', {\n                        rules: [\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ],\n                    })(this.__renderPasswordInput())}\n                </FormItem>\n\n                <FormItem>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className={css.button}\n                        disabled={hasErrors(getFieldsError())}\n                    >\n                        Log in\n                    </Button>\n                </FormItem>\n            </Form>\n        );\n    }\n\n    private __onSubmit(e: React.SyntheticEvent): void {\n        e.preventDefault();\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.onSubmit(values);\n            }\n        });\n    }\n}\n\nexport default (Form.create()(LoginForm) as any) as React.SFC<Props>;\n","import { Card, Col, Row, Spin } from 'antd';\nimport React from 'react';\nimport { Page, PageProps } from '../../common/page';\nimport Form from './form';\nconst css = require('./index.module.scss');\n\nexport interface Props extends PageProps {}\n\nexport default class LoginPage extends Page<never, Props> {\n    constructor(props: Props) {\n        super(props);\n\n        this.__onSubmit = this.__onSubmit.bind(this);\n    }\n\n    public render(): any {\n        return (\n            <div className={css.wrapper}>\n                <Row\n                    type=\"flex\"\n                    align=\"middle\"\n                    justify=\"center\"\n                    className={css.row}\n                >\n                    <Col span={5} className={css.column}>\n                        <Spin spinning={false}>\n                            <Card\n                                className={css.card}\n                            >\n                                <Form\n                                    username={''}\n                                    onSubmit={this.__onSubmit}\n                                />\n                            </Card>\n                        </Spin>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    private __onSubmit(): void {\n        // this.props.context.executeAction(login, cred);\n    }\n}\n"],"sourceRoot":""}