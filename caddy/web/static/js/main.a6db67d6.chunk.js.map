{"version":3,"sources":["components/common/loader/loader.module.scss","api/graphql.ts","components/pages/index.tsx","components/app.tsx","app.ts","index.tsx","components/common/page.tsx","components/common/loader/loader.tsx"],"names":["module","exports","spinner","restLink","RestLink","uri","authLink","setContext","_","_ref","headers","token","sessionStorage","getItem","Object","objectSpread","authorization","concat","client-name","client-version","GraphQLApi","_ApolloClient","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","link","ApolloLink","from","cache","InMemoryCache","inherits","ApolloClient","LoadableErrorPage","React","lazy","__webpack_require__","e","then","bind","LoadableLoginPage","Promise","all","LoadableHomePage","IndexPage","_Page","apply","arguments","createClass","key","value","redirect","location","props","startsWith","pathname","react_default","a","createElement","react_router","to","react","fallback","loader","size","path","component","Page","AppComponent","_React$PureComponent","_this$props","graphql","history","react_apollo_esm","client","PureComponent","Application","__history","__graphQL","app_AppComponent","app","App","createBrowserHistory","ReactDOM","render","document","getElementById","state","_this","_System_Volumes_Data_crawl_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_System_Volumes_Data_crawl_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_System_Volumes_Data_crawl_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","set","_System_Volumes_Data_crawl_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","_System_Volumes_Data_crawl_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","query","parseQuery","_System_Volumes_Data_crawl_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_System_Volumes_Data_crawl_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__","search","get","qs","parse","ignoreQueryPrefix","q","stringify","name","defaultValue","match","getQueryParam","isEmpty","push","stringifyQuery","num","segments","url","split","slice","length","join","goBack","goForward","antd__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","css","require","__webpack_exports__","_ref$show","show","loading","className","spinning"],"mappings":"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","file":"static/js/main.a6db67d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"loader_spinner__2l7BG\"};","import { ApolloLink } from 'apollo-link';\nimport { ApolloClient } from 'apollo-client';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { RestLink } from 'apollo-link-rest';\n\nconst restLink = new RestLink({\n    uri: '/api/'\n});\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = sessionStorage.getItem('auth_token');\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : null,\n            'client-name': 'Ferret Server UI',\n            'client-version': '1.0.0',\n        },\n    };\n});\n\nexport class GraphQLApi extends ApolloClient<any> {\n    constructor() {\n        super({\n            link: ApolloLink.from([authLink, restLink]),\n            cache: new InMemoryCache(),\n        });\n    }\n}\n","import startsWith from 'lodash/startsWith';\nimport React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Loader from '../common/loader/loader';\nimport { Page, PageProps } from '../common/page';\n\nconst LoadableErrorPage = React.lazy(() => import('./error/index') as any);\nconst LoadableLoginPage = React.lazy(() => import('./login/index') as any);\nconst LoadableHomePage = React.lazy(() => import('./home') as any);\n\nexport interface Props extends PageProps {}\n\nexport class IndexPage extends Page<never, Props> {\n    public render(): any {\n        let redirect: any;\n\n        const { location } = this.props;\n\n        // if (data == null || data.isAuthenticated === false) {\n        //     if (location.pathname !== '/login') {\n        //         redirect = <Redirect to=\"/login\"/>;\n        //     }\n        // } else\n        if (startsWith(location.pathname, '/home') === false) {\n            redirect = <Redirect to=\"/home\" />;\n        }\n\n        return (\n            <Suspense fallback={<Loader size=\"large\" />}>\n                <Switch>\n                    {redirect}\n                    <Route path=\"/login\" component={LoadableLoginPage} />\n                    <Route path=\"/home\" component={LoadableHomePage} />\n                    <Route path=\"/error\" component={LoadableErrorPage} />\n                </Switch>\n            </Suspense>\n        );\n    }\n}\n","import ApolloClient from 'apollo-client';\nimport { History } from 'history';\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { Route, Router } from 'react-router';\nimport { IndexPage } from './pages/index';\n\nexport interface Props {\n    history: History;\n    graphql: ApolloClient<any>;\n}\n\nexport class AppComponent extends React.PureComponent<Props> {\n    public render(): any {\n        const { graphql, history } = this.props;\n\n        return (\n            <ApolloProvider client={graphql}>\n                <Router history={history}>\n                    <Route path=\"/\" component={IndexPage as any} />\n                </Router>\n            </ApolloProvider>\n        );\n    }\n}\n\nexport function create(\n    history: History,\n    graphql: ApolloClient<any>,\n): React.ReactElement<any> {\n    return <AppComponent history={history} graphql={graphql} />;\n}\n","import { History } from 'history';\nimport React from 'react';\nimport { GraphQLApi } from './api/graphql';\nimport { create } from './components/app';\n\nexport default class Application {\n    private readonly __history: History;\n    private readonly __graphQL: GraphQLApi;\n\n    constructor(history: History) {\n        this.__graphQL = new GraphQLApi();\n        this.__history = history;\n    }\n\n    public createElement(): React.ReactElement<any> {\n        return create(this.__history, this.__graphQL);\n    }\n}\n","import { createBrowserHistory } from 'history';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n// import * as serviceWorker from './serviceWorker';\n\nconst app = new App(createBrowserHistory());\n\nReactDOM.render(app.createElement(), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport set from 'lodash/set';\nimport qs from 'qs';\nimport React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Query } from '../../common/models/query/query';\n\nexport interface PageProps<TParams = never>\n    extends RouteComponentProps<TParams> {}\n\nexport interface PageState {\n    query: Query;\n}\n\nexport abstract class Page<\n    TParams,\n    TProps extends PageProps<TParams>,\n    TState extends PageState = { query: Query }\n> extends React.PureComponent<TProps, TState> {\n    public static parseQuery(props: PageProps<any>): Query {\n        const search = get(props, 'location.search', '');\n\n        return qs.parse(search, { ignoreQueryPrefix: true });\n    }\n\n    public static stringifyQuery(q: Query): string {\n        return qs.stringify(q);\n    }\n\n    public static getDerivedStateFromProps(props: PageProps): PageState {\n        return {\n            query: Page.parseQuery(props),\n        };\n    }\n\n    constructor(props: TProps, state?: Partial<TState>) {\n        super(props);\n\n        set(this, 'state', {\n            query: Page.parseQuery(props),\n            ...state,\n        });\n    }\n\n    public getPath(): string {\n        return this.props.location.pathname;\n    }\n\n    public getParam(name: string, defaultValue?: string): string | undefined {\n        return get(this.props.match, `params.${name}`, defaultValue);\n    }\n\n    public getQuery(): Query {\n        return this.state.query;\n    }\n\n    public getQueryParam(name: string): string | undefined {\n        if (this.state.query == null) {\n            return undefined;\n        }\n\n        return this.state.query[name];\n    }\n\n    public getQueryParamOr(name: string, defaultValue: string): string {\n        return this.getQueryParam(name) || defaultValue;\n    }\n\n    public navigate(path: string, query?: any): void {\n        if (isEmpty(query) === true) {\n            this.props.history.push(path);\n\n            return;\n        }\n\n        this.props.history.push(`${path}?${Page.stringifyQuery(query)}`);\n    }\n\n    public slicePathBack(num: number): string {\n        const segments = this.props.match.url.split('/');\n\n        return segments.slice(0, segments.length - num).join('/');\n    }\n\n    public goBack(): void {\n        this.props.history.goBack();\n    }\n\n    public goForward(): void {\n        this.props.history.goForward();\n    }\n}\n","import { Spin } from 'antd';\nimport React from 'react';\nconst css = require('./loader.module.scss');\n\nexport interface Props {\n    show?: boolean;\n    size?: 'small' | 'default' |'large';\n}\n\nexport default ({ size, show: loading = true }: Props) => {\n    return (\n        <div className=\"background\">\n            <Spin className={css.spinner} spinning={loading} size={size} />\n        </div>\n    );\n};\n"],"sourceRoot":""}