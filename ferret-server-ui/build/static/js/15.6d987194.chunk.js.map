{"version":3,"sources":["components/common/page-header/page-header.tsx","components/common/page-header/page-header.module.scss","components/common/date-time/date-time.tsx","components/common/form/card.tsx","components/common/form/card.module.scss","queries/exec.ts","models/api/model/executionCause.ts","components/common/cause/cause.tsx","models/api/model/executionStatus.ts","components/common/status/status.tsx","components/pages/home/project/execution/job/index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","PageHeader","antd__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","css","require","React","memo","props","a","createElement","Object","assign","className","cn","ph","module","exports","DateTime","date_fns_format__WEBPACK_IMPORTED_MODULE_0__","date_fns_format__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_ref","value","_ref$format","format","fmt","FormCard","children","card","findQuery","gql","_templateObject","getQuery","_templateObject2","ExecutionCause","COLORS","_COLORS","defineProperty","CauseTag","react_default","tag","color","ExecutionStatus","StatusTag","JobDetailsPage","_this","_System_Volumes_Data_crawl_zhuazi_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_System_Volumes_Data_crawl_zhuazi_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_System_Volumes_Data_crawl_zhuazi_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","__renderForm","bind","_System_Volumes_Data_crawl_zhuazi_ferret_server_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","__renderDescription","__handleError","projectId","variables","id","getParam","react__WEBPACK_IMPORTED_MODULE_9___default","react_apollo__WEBPACK_IMPORTED_MODULE_10__","query","onError","qr","_this2","loading","data","output","undefined","antd__WEBPACK_IMPORTED_MODULE_6__","spinning","_common_form_card__WEBPACK_IMPORTED_MODULE_14__","_common_page_header_page_header__WEBPACK_IMPORTED_MODULE_16__","title","jobId","onBack","navigate","slicePathBack","Fragment","antd__WEBPACK_IMPORTED_MODULE_7__","Item","label","scriptId","_common_status_status__WEBPACK_IMPORTED_MODULE_17__","status","_common_cause_cause__WEBPACK_IMPORTED_MODULE_12__","cause","_common_date_time_date_time__WEBPACK_IMPORTED_MODULE_13__","startedAt","endedAt","logs","error","notification","message","Page"],"mappings":"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","file":"static/js/15.6d987194.chunk.js","sourcesContent":["import { PageHeader as Header } from 'antd';\nimport { PageHeaderProps } from 'antd/lib/page-header';\nimport cn from 'classnames';\nimport React from 'react';\nconst css = require('./page-header.module.scss');\n\nexport interface Props extends PageHeaderProps {}\n\nexport const PageHeader = React.memo<Props>((props: Props) => {\n    return <Header {...props} className={cn(css.ph, props.className)} />;\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ph\":\"page-header_ph__1jMB9\"};","import fmt from 'date-fns/format';\nimport React from 'react';\n\nexport interface Props {\n    value?: Date | string | number;\n    format?: string;\n}\n\nexport const DateTime = React.memo<Props>(\n    ({ value, format = 'DD/MM/YY hh:mm:ss' }: Props) => {\n        return <span>{value ? fmt(value, format) : ''}</span>;\n    },\n);\n","import { Card } from 'antd';\nimport cn from 'classnames';\nimport React from 'react';\n\nconst css = require('./card.module.scss');\n\nexport interface Props extends React.Props<any> {\n    className?: string;\n}\n\nexport const FormCard = React.memo<Props>(({ children, className }: Props) => {\n    return <Card className={cn(css.card, className)}>{children}</Card>;\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__3zxNn\"};","import gql from 'graphql-tag';\n\nexport const findQuery = gql`\n    query findJobs($projectId: String!, $query: Query) {\n        output(projectId: $projectId, query: $query)\n            @rest(\n                type: \"[Execution]\"\n                path: \"/projects/{args.projectId}/exec?{args.query}\"\n            ) {\n            paging\n            data\n        }\n    }\n`;\n\nexport const getQuery = gql`\n    query findJob($projectId: String!, $id: String!) {\n        output(projectId: $projectId, id: $id)\n            @rest(\n                type: \"Script\"\n                path: \"/projects/{args.projectId}/exec/{args.id}\"\n            ) {\n            jobId\n            scriptId\n            status\n            cause\n            params\n            startedAt\n            endedAt\n            logs\n            error\n        }\n    }\n`;\n","/**\n * Ferret Server API\n * API of Ferret Server\n *\n * OpenAPI spec version: 1.0.0-rc.2\n * Contact: mont.ferret@gmail.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * Execution cause\n */\nexport type ExecutionCause = 'unknown' | 'manual' | 'schedule' | 'hook';\n\nexport const ExecutionCause = {\n    Unknown: 'unknown' as ExecutionCause,\n    Manual: 'manual' as ExecutionCause,\n    Schedule: 'schedule' as ExecutionCause,\n    Hook: 'hook' as ExecutionCause,\n};\n","import { Tag } from 'antd';\nimport React from 'react';\nimport { ExecutionCause } from '../../../models/api/model/executionCause';\n\nconst COLORS = {\n    [ExecutionCause.Manual]: 'purple',\n    [ExecutionCause.Schedule]: 'cyan',\n    [ExecutionCause.Hook]: 'volcano',\n    [ExecutionCause.Unknown]: 'black',\n};\n\nexport interface Props {\n    value: ExecutionCause;\n}\n\nexport const CauseTag = React.memo<Props>(({ value }: Props) => {\n    return <Tag color={COLORS[value]}>{value}</Tag>;\n});\n","/**\n * Ferret Server API\n * API of Ferret Server\n *\n * OpenAPI spec version: 1.0.0-rc.2\n * Contact: mont.ferret@gmail.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\n/**\n * Execution stats\n */\nexport type ExecutionStatus = 'unknown' | 'queued' | 'running' | 'completed' | 'cancelled' | 'errored';\n\nexport const ExecutionStatus = {\n    Unknown: 'unknown' as ExecutionStatus,\n    Queued: 'queued' as ExecutionStatus,\n    Running: 'running' as ExecutionStatus,\n    Completed: 'completed' as ExecutionStatus,\n    Cancelled: 'cancelled' as ExecutionStatus,\n    Errored: 'errored' as ExecutionStatus,\n};\n","import { Tag } from 'antd';\nimport React from 'react';\nimport { ExecutionStatus } from '../../../models/api/model/executionStatus';\n\nconst COLORS = {\n    [ExecutionStatus.Completed]: 'green',\n    [ExecutionStatus.Running]: 'blue',\n    [ExecutionStatus.Errored]: 'red',\n    [ExecutionStatus.Cancelled]: 'grey',\n    [ExecutionStatus.Queued]: 'orange',\n    [ExecutionStatus.Unknown]: 'black',\n};\n\nexport interface Props {\n    value: ExecutionStatus;\n}\n\nexport const StatusTag = React.memo<Props>(({ value }: Props) => {\n    return <Tag color={COLORS[value]}>{value}</Tag>;\n});\n","import { Descriptions, Spin, notification } from 'antd';\nimport { ApolloError } from 'apollo-client';\nimport React from 'react';\nimport { Query, QueryResult } from 'react-apollo';\nimport { QueryResultData } from '../../../../../../common/graphql/query/result';\nimport { ExecutionOutputDetailed } from '../../../../../../models/api/model/executionOutputDetailed';\nimport { getQuery } from '../../../../../../queries/exec';\nimport { CauseTag } from '../../../../../common/cause/cause';\nimport { DateTime } from '../../../../../common/date-time/date-time';\nimport { FormCard } from '../../../../../common/form/card';\nimport { Page, PageProps } from '../../../../../common/page';\nimport { PageHeader } from '../../../../../common/page-header/page-header';\nimport { StatusTag } from '../../../../../common/status/status';\n\nexport interface Params {\n    id: string;\n}\n\nexport interface Props extends PageProps<Params> {\n    projectId: string;\n}\n\nexport default class JobDetailsPage extends Page<Params, Props> {\n    constructor(props: Props) {\n        super(props);\n\n        this.__renderForm = this.__renderForm.bind(this);\n        this.__renderDescription = this.__renderDescription.bind(this);\n        this.__handleError = this.__handleError.bind(this);\n    }\n\n    public render(): any {\n        const { projectId } = this.props;\n        const id = this.getParam('id');\n\n        const variables = {\n            id,\n            projectId,\n        };\n\n        return (\n            <Query\n                query={getQuery}\n                variables={variables}\n                onError={this.__handleError}\n            >\n                {this.__renderForm}\n            </Query>\n        );\n    }\n\n    private __renderForm(\n        qr: QueryResult<QueryResultData<ExecutionOutputDetailed>>,\n    ): any {\n        const loading = qr.loading;\n        const data = qr.data ? qr.data.output : undefined;\n        const onBack = () => {\n            this.navigate(this.slicePathBack(1));\n        };\n\n        return (\n            <Spin spinning={loading}>\n                <FormCard>\n                    <PageHeader\n                        title={data ? data.jobId : ''}\n                        onBack={onBack}\n                    />\n                    {data ? this.__renderDescription(data) : null}\n                </FormCard>\n            </Spin>\n        );\n    }\n\n    private __renderDescription(data: ExecutionOutputDetailed): any {\n        return (\n            <>\n                <Descriptions title=\"Job result summary\">\n                    <Descriptions.Item label=\"Script\">\n                        <span>{data.scriptId}</span>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Status\">\n                        <StatusTag value={data.status} />\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Cause\">\n                        <CauseTag value={data.cause} />\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Started\">\n                        <DateTime value={data.startedAt} />\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Ended\">\n                        <DateTime value={data.endedAt} />\n                    </Descriptions.Item>\n                </Descriptions>\n\n                <hr />\n                <h3>Logs</h3>\n                {data.logs}\n            </>\n        );\n    }\n\n    private __handleError(error: ApolloError): void {\n        notification.error({\n            message: error.message,\n        });\n    }\n}\n"],"sourceRoot":""}